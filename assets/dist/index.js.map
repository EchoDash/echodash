{"version":3,"file":"index.js","mappings":"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","sources":["webpack://echodash/./node_modules/react-dom/client.js","webpack://echodash/external window \"ReactDOM\"","webpack://echodash/webpack/bootstrap","webpack://echodash/external window \"React\"","webpack://echodash/./assets/src/components/IntegrationList.tsx","webpack://echodash/./assets/src/components/IntegrationDetail.tsx","webpack://echodash/./assets/src/components/MergeTagSelector.tsx","webpack://echodash/./assets/src/components/TriggerModal.tsx","webpack://echodash/./assets/src/App.tsx","webpack://echodash/./assets/src/index.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","module.exports = window[\"ReactDOM\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","/**\n * Integration List Component\n * \n * Displays list of integrations matching the mockup design\n */\n\nimport React from 'react';\n\ninterface Integration {\n\tslug: string;\n\tname: string;\n\ticon: string;\n\ttriggerCount: number;\n\tenabled: boolean;\n\tdescription?: string;\n}\n\ninterface IntegrationListProps {\n\tintegrations: Integration[];\n\tsettings: {\n\t\tendpoint?: string;\n\t\tisConnected?: boolean;\n\t};\n\tonIntegrationClick: (slug: string) => void;\n}\n\nexport const IntegrationList: React.FC<IntegrationListProps> = ({\n\tintegrations,\n\tsettings,\n\tonIntegrationClick,\n}) => {\n\treturn (\n\t\t<>\n\t\t\t{/* Header with logo */}\n\t\t\t<div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px' }}>\n\t\t\t\t<span className=\"dashicons dashicons-rss\" style={{ fontSize: '36px', marginRight: '10px' }}></span>\n\t\t\t\t<h1 style={{ margin: 0 }}>EchoDash</h1>\n\t\t\t\t<a \n\t\t\t\t\thref=\"https://docs.echodash.com\" \n\t\t\t\t\ttarget=\"_blank\" \n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\tstyle={{ marginLeft: 'auto' }}\n\t\t\t\t\tclassName=\"button button-link\"\n\t\t\t\t>\n\t\t\t\t\tDocumentation →\n\t\t\t\t</a>\n\t\t\t</div>\n\n\t\t\t{/* Welcome Section */}\n\t\t\t<div style={{ \n\t\t\t\tbackgroundColor: 'white', \n\t\t\t\tborder: '1px solid #c3c4c7', \n\t\t\t\tborderRadius: '8px', \n\t\t\t\tpadding: '30px',\n\t\t\t\tmarginBottom: '30px',\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tgap: '30px'\n\t\t\t}}>\n\t\t\t\t<div style={{ flex: 1 }}>\n\t\t\t\t\t<h2 style={{ marginTop: 0 }}>Welcome to EchoDash</h2>\n\t\t\t\t\t<p style={{ color: '#646970', marginBottom: '20px' }}>\n\t\t\t\t\t\tEchoDash is a service for tracking real-time events on your WordPress site. It's free and easy to use.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p style={{ marginBottom: '8px' }}>\n\t\t\t\t\t\tTo get started, <a href=\"#\" style={{ color: '#2271b1' }}>create an endpoint in your EchoDash account</a>, and copy the URL into the field below.\n\t\t\t\t\t</p>\n\t\t\t\t\t\n\t\t\t\t\t<div style={{ marginTop: '20px' }}>\n\t\t\t\t\t\t<label htmlFor=\"endpoint-url\" style={{ display: 'block', marginBottom: '8px' }}>\n\t\t\t\t\t\t\t<strong>URL</strong>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tid=\"endpoint-url\"\n\t\t\t\t\t\t\tclassName=\"regular-text\"\n\t\t\t\t\t\t\tplaceholder=\"https://example.com/\"\n\t\t\t\t\t\t\tvalue={settings.endpoint || ''}\n\t\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{/* Video placeholder */}\n\t\t\t\t<div style={{ \n\t\t\t\t\twidth: '400px', \n\t\t\t\t\theight: '225px', \n\t\t\t\t\tbackgroundColor: '#f0f0f1',\n\t\t\t\t\tborderRadius: '8px',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\tposition: 'relative'\n\t\t\t\t}}>\n\t\t\t\t\t<div style={{\n\t\t\t\t\t\twidth: '60px',\n\t\t\t\t\t\theight: '60px',\n\t\t\t\t\t\tbackgroundColor: 'rgba(255,255,255,0.9)',\n\t\t\t\t\t\tborderRadius: '50%',\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\tcursor: 'pointer'\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<span className=\"dashicons dashicons-controls-play\" style={{ fontSize: '30px', marginLeft: '3px' }}></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Integrations Section */}\n\t\t\t<div style={{ \n\t\t\t\tbackgroundColor: 'white', \n\t\t\t\tborder: '1px solid #c3c4c7', \n\t\t\t\tborderRadius: '8px', \n\t\t\t\tpadding: '20px'\n\t\t\t}}>\n\t\t\t\t<h2 style={{ marginTop: 0, marginBottom: '20px' }}>Integrations</h2>\n\t\t\t\t\n\t\t\t\t<div style={{ display: 'flex', flexDirection: 'column', gap: '1px' }}>\n\t\t\t\t\t{integrations.map((integration) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={integration.slug}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\tpadding: '16px',\n\t\t\t\t\t\t\t\tbackgroundColor: '#f6f7f7',\n\t\t\t\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\t\t\t\tmarginBottom: '8px'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/* Icon */}\n\t\t\t\t\t\t\t<div style={{ \n\t\t\t\t\t\t\t\twidth: '40px', \n\t\t\t\t\t\t\t\theight: '40px',\n\t\t\t\t\t\t\t\tbackgroundColor: integration.slug === 'wordpress' ? '#2271b1' : '#FF6900',\n\t\t\t\t\t\t\t\tborderRadius: '8px',\n\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\tmarginRight: '16px'\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<span \n\t\t\t\t\t\t\t\t\tclassName={`dashicons dashicons-${integration.icon}`} \n\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '24px', color: 'white' }}\n\t\t\t\t\t\t\t\t></span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{/* Name and trigger count */}\n\t\t\t\t\t\t\t<div style={{ flex: 1 }}>\n\t\t\t\t\t\t\t\t<h3 style={{ margin: 0, fontSize: '16px', fontWeight: 'normal' }}>\n\t\t\t\t\t\t\t\t\t{integration.name}\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<span style={{ color: '#646970', fontSize: '13px' }}>\n\t\t\t\t\t\t\t\t\t{integration.triggerCount} {integration.triggerCount === 1 ? 'Trigger' : 'Triggers'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{/* Actions */}\n\t\t\t\t\t\t\t<div style={{ display: 'flex', gap: '10px' }}>\n\t\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\t\tclassName=\"button button-secondary\"\n\t\t\t\t\t\t\t\t\tonClick={() => onIntegrationClick(integration.slug)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tManage\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button className=\"button button-primary\">\n\t\t\t\t\t\t\t\t\t+ Add Trigger\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};","/**\n * Integration Detail Component\n * \n * Shows individual integration with triggers matching mockup\n */\n\nimport React from 'react';\n\ninterface Integration {\n\tslug: string;\n\tname: string;\n\ticon: string;\n\ttriggerCount: number;\n\tenabled: boolean;\n\tdescription?: string;\n}\n\ninterface Trigger {\n\tid: string;\n\tname: string;\n\tdescription?: string;\n\tenabled?: boolean;\n}\n\ninterface IntegrationDetailProps {\n\tintegration: Integration;\n\ttriggers: Trigger[];\n\tonBack: () => void;\n\tonAddTrigger: () => void;\n}\n\nexport const IntegrationDetail: React.FC<IntegrationDetailProps> = ({\n\tintegration,\n\ttriggers,\n\tonBack,\n\tonAddTrigger,\n}) => {\n\treturn (\n\t\t<>\n\t\t\t{/* Header with logo */}\n\t\t\t<div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px' }}>\n\t\t\t\t<span className=\"dashicons dashicons-rss\" style={{ fontSize: '36px', marginRight: '10px' }}></span>\n\t\t\t\t<h1 style={{ margin: 0 }}>EchoDash</h1>\n\t\t\t\t<a \n\t\t\t\t\thref=\"https://docs.echodash.com\" \n\t\t\t\t\ttarget=\"_blank\" \n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\tstyle={{ marginLeft: 'auto' }}\n\t\t\t\t\tclassName=\"button button-link\"\n\t\t\t\t>\n\t\t\t\t\tDocumentation →\n\t\t\t\t</a>\n\t\t\t</div>\n\n\t\t\t{/* Breadcrumb navigation */}\n\t\t\t<div style={{ marginBottom: '20px' }}>\n\t\t\t\t<button \n\t\t\t\t\tonClick={onBack}\n\t\t\t\t\tclassName=\"button button-link\"\n\t\t\t\t\tstyle={{ padding: 0 }}\n\t\t\t\t>\n\t\t\t\t\tIntegrations\n\t\t\t\t</button>\n\t\t\t\t<span style={{ margin: '0 8px', color: '#646970' }}>/</span>\n\t\t\t\t<span>{integration.name}</span>\n\t\t\t</div>\n\n\t\t\t{/* Integration header */}\n\t\t\t<div style={{ \n\t\t\t\tbackgroundColor: 'white', \n\t\t\t\tborder: '1px solid #c3c4c7', \n\t\t\t\tborderRadius: '8px', \n\t\t\t\tpadding: '30px',\n\t\t\t\tmarginBottom: '30px'\n\t\t\t}}>\n\t\t\t\t<div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px' }}>\n\t\t\t\t\t{/* Icon */}\n\t\t\t\t\t<div style={{ \n\t\t\t\t\t\twidth: '48px', \n\t\t\t\t\t\theight: '48px',\n\t\t\t\t\t\tbackgroundColor: integration.slug === 'wordpress' ? '#2271b1' : '#FF6900',\n\t\t\t\t\t\tborderRadius: '8px',\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\tmarginRight: '16px'\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<span \n\t\t\t\t\t\t\tclassName={`dashicons dashicons-${integration.icon}`} \n\t\t\t\t\t\t\tstyle={{ fontSize: '28px', color: 'white' }}\n\t\t\t\t\t\t></span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1 style={{ margin: 0, fontSize: '24px' }}>{integration.name}</h1>\n\t\t\t\t\t\t<p style={{ margin: 0, color: '#646970' }}>\n\t\t\t\t\t\t\t{integration.description || 'Configure triggers for this integration'}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button \n\t\t\t\t\t\tclassName=\"button button-primary\"\n\t\t\t\t\t\tonClick={onAddTrigger}\n\t\t\t\t\t\tstyle={{ marginLeft: 'auto' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t+ Add Trigger\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Triggers section */}\n\t\t\t<div style={{ \n\t\t\t\tbackgroundColor: 'white', \n\t\t\t\tborder: '1px solid #c3c4c7', \n\t\t\t\tborderRadius: '8px', \n\t\t\t\tpadding: '20px'\n\t\t\t}}>\n\t\t\t\t<h2 style={{ marginTop: 0, marginBottom: '20px' }}>Triggers</h2>\n\t\t\t\t\n\t\t\t\t{triggers.length === 0 ? (\n\t\t\t\t\t<div style={{ \n\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\tpadding: '60px 20px',\n\t\t\t\t\t\tcolor: '#646970'\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<div style={{ \n\t\t\t\t\t\t\twidth: '48px', \n\t\t\t\t\t\t\theight: '48px',\n\t\t\t\t\t\t\tbackgroundColor: '#FF6900',\n\t\t\t\t\t\t\tborderRadius: '8px',\n\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\tmargin: '0 auto 20px'\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<span \n\t\t\t\t\t\t\t\tclassName={`dashicons dashicons-${integration.icon}`} \n\t\t\t\t\t\t\t\tstyle={{ fontSize: '28px', color: 'white' }}\n\t\t\t\t\t\t\t></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h3 style={{ marginBottom: '10px' }}>Add your first {integration.name} trigger</h3>\n\t\t\t\t\t\t<p style={{ marginBottom: '20px' }}>\n\t\t\t\t\t\t\tAccumsan augue sapien lorem blandit leo. In fringilla aliquam mattis phasellus.<br />\n\t\t\t\t\t\t\tFeugiat feugiat risus cursus tempor tortor.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tclassName=\"button button-primary\"\n\t\t\t\t\t\t\tonClick={onAddTrigger}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t+ Add Trigger\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n\t\t\t\t\t\t{triggers.map((trigger, index) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={trigger.id || index}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\t\tpadding: '16px',\n\t\t\t\t\t\t\t\t\tbackgroundColor: '#f6f7f7',\n\t\t\t\t\t\t\t\t\tborderRadius: '4px'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{/* Drag handle */}\n\t\t\t\t\t\t\t\t<span \n\t\t\t\t\t\t\t\t\tclassName=\"dashicons dashicons-menu\" \n\t\t\t\t\t\t\t\t\tstyle={{ color: '#646970', marginRight: '12px', cursor: 'grab' }}\n\t\t\t\t\t\t\t\t></span>\n\n\t\t\t\t\t\t\t\t{/* Trigger info */}\n\t\t\t\t\t\t\t\t<div style={{ flex: 1 }}>\n\t\t\t\t\t\t\t\t\t<div style={{ fontWeight: 'bold', marginBottom: '4px' }}>Form Submitted</div>\n\t\t\t\t\t\t\t\t\t<div style={{ color: '#646970', fontSize: '14px' }}>{trigger.name}</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{/* Actions */}\n\t\t\t\t\t\t\t\t<div style={{ display: 'flex', gap: '10px' }}>\n\t\t\t\t\t\t\t\t\t<button className=\"button button-secondary\">Send Test</button>\n\t\t\t\t\t\t\t\t\t<button className=\"button button-secondary\">Edit</button>\n\t\t\t\t\t\t\t\t\t<button className=\"button button-link-delete\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"dashicons dashicons-trash\"></span>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t);\n};","/**\n * Merge Tag Selector Component\n * \n * Dropdown component for selecting merge tags from available options\n */\n\nimport React, { useState, useRef, useEffect } from 'react';\n\ninterface MergeTagOption {\n\tmeta: string;\n\tpreview: string | number;\n\tplaceholder: string;\n}\n\ninterface MergeTagGroup {\n\tname: string;\n\ttype: string;\n\toptions: MergeTagOption[];\n}\n\ninterface MergeTagSelectorProps {\n\toptions: MergeTagGroup[];\n\tonSelect: (mergeTag: string) => void;\n\tisOpen: boolean;\n\tonClose: () => void;\n\tbuttonRef: React.RefObject<HTMLButtonElement>;\n}\n\nexport const MergeTagSelector: React.FC<MergeTagSelectorProps> = ({\n\toptions,\n\tonSelect,\n\tisOpen,\n\tonClose,\n\tbuttonRef\n}) => {\n\tconst dropdownRef = useRef<HTMLDivElement>(null);\n\tconst [position, setPosition] = useState({ top: 0, left: 0 });\n\n\tuseEffect(() => {\n\t\tif (isOpen && buttonRef.current && dropdownRef.current) {\n\t\t\tconst buttonRect = buttonRef.current.getBoundingClientRect();\n\t\t\tconst dropdownRect = dropdownRef.current.getBoundingClientRect();\n\t\t\t\n\t\t\t// Position dropdown below the button\n\t\t\tlet top = buttonRect.bottom + window.scrollY + 5;\n\t\t\tlet left = buttonRect.left + window.scrollX;\n\t\t\t\n\t\t\t// Adjust if dropdown would go off screen\n\t\t\tif (left + dropdownRect.width > window.innerWidth) {\n\t\t\t\tleft = buttonRect.right + window.scrollX - dropdownRect.width;\n\t\t\t}\n\t\t\t\n\t\t\tif (top + dropdownRect.height > window.innerHeight + window.scrollY) {\n\t\t\t\ttop = buttonRect.top + window.scrollY - dropdownRect.height - 5;\n\t\t\t}\n\t\t\t\n\t\t\tsetPosition({ top, left });\n\t\t}\n\t}, [isOpen, buttonRef]);\n\n\tuseEffect(() => {\n\t\tconst handleClickOutside = (event: MouseEvent) => {\n\t\t\tif (dropdownRef.current && !dropdownRef.current.contains(event.target as Node) &&\n\t\t\t\tbuttonRef.current && !buttonRef.current.contains(event.target as Node)) {\n\t\t\t\tonClose();\n\t\t\t}\n\t\t};\n\n\t\tif (isOpen) {\n\t\t\tdocument.addEventListener('mousedown', handleClickOutside);\n\t\t\treturn () => document.removeEventListener('mousedown', handleClickOutside);\n\t\t}\n\t}, [isOpen, onClose, buttonRef]);\n\n\tconst handleSelect = (groupType: string, meta: string) => {\n\t\tconst mergeTag = `{${groupType}:${meta}}`;\n\t\tonSelect(mergeTag);\n\t\tonClose();\n\t};\n\n\tif (!isOpen) return null;\n\n\treturn (\n\t\t<div\n\t\t\tref={dropdownRef}\n\t\t\tstyle={{\n\t\t\t\tposition: 'fixed',\n\t\t\t\ttop: position.top,\n\t\t\t\tleft: position.left,\n\t\t\t\tbackgroundColor: 'white',\n\t\t\t\tborder: '1px solid #ddd',\n\t\t\t\tborderRadius: '4px',\n\t\t\t\tboxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n\t\t\t\tzIndex: 10000,\n\t\t\t\tminWidth: '300px',\n\t\t\t\tmaxHeight: '300px',\n\t\t\t\toverflowY: 'auto'\n\t\t\t}}\n\t\t>\n\t\t\t{options.map((group, groupIndex) => (\n\t\t\t\t<div key={groupIndex} style={{ borderBottom: groupIndex < options.length - 1 ? '1px solid #eee' : 'none' }}>\n\t\t\t\t\t{/* Group Header */}\n\t\t\t\t\t<div style={{\n\t\t\t\t\t\tpadding: '8px 12px',\n\t\t\t\t\t\tbackgroundColor: '#f7f7f7',\n\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\tfontSize: '13px',\n\t\t\t\t\t\tcolor: '#555',\n\t\t\t\t\t\tborderBottom: '1px solid #eee'\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{group.name}\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t{/* Group Options */}\n\t\t\t\t\t{group.options.map((option, optionIndex) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={optionIndex}\n\t\t\t\t\t\t\tonClick={() => handleSelect(group.type, option.meta)}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: '8px 12px',\n\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\tborderBottom: optionIndex < group.options.length - 1 ? '1px solid #f0f0f0' : 'none',\n\t\t\t\t\t\t\t\tfontSize: '13px',\n\t\t\t\t\t\t\t\ttransition: 'background-color 0.1s'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonMouseEnter={(e) => {\n\t\t\t\t\t\t\t\te.currentTarget.style.backgroundColor = '#f5f5f5';\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonMouseLeave={(e) => {\n\t\t\t\t\t\t\t\te.currentTarget.style.backgroundColor = 'transparent';\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div style={{ fontWeight: '500', marginBottom: '2px' }}>\n\t\t\t\t\t\t\t\t{`{${group.type}:${option.meta}}`}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div style={{ color: '#666', fontSize: '12px' }}>\n\t\t\t\t\t\t\t\t{option.placeholder}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div style={{ color: '#999', fontSize: '11px', marginTop: '2px' }}>\n\t\t\t\t\t\t\t\tPreview: {String(option.preview)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t\t\n\t\t\t{options.length === 0 && (\n\t\t\t\t<div style={{ \n\t\t\t\t\tpadding: '12px', \n\t\t\t\t\tcolor: '#666', \n\t\t\t\t\tfontSize: '13px',\n\t\t\t\t\ttextAlign: 'center'\n\t\t\t\t}}>\n\t\t\t\t\tNo merge tags available\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};","/**\n * Trigger Modal Component\n * \n * Modal for adding/editing triggers matching the mockup design\n */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { MergeTagSelector } from './MergeTagSelector';\n\ninterface MergeTagOption {\n\tmeta: string;\n\tpreview: string | number;\n\tplaceholder: string;\n}\n\ninterface MergeTagGroup {\n\tname: string;\n\ttype: string;\n\toptions: MergeTagOption[];\n}\n\ninterface Integration {\n\tslug: string;\n\tname: string;\n\tavailableTriggers?: Array<{\n\t\tid: string;\n\t\tname: string;\n\t\tdescription?: string;\n\t\tdefaultEvent?: any;\n\t\toptions?: MergeTagGroup[];\n\t}>;\n}\n\ninterface TriggerModalProps {\n\tisOpen: boolean;\n\tonClose: () => void;\n\tonSave: (data: any) => void;\n\tintegration: Integration;\n}\n\ninterface KeyValuePair {\n\tkey: string;\n\tvalue: string;\n}\n\nexport const TriggerModal: React.FC<TriggerModalProps> = ({\n\tisOpen,\n\tonClose,\n\tonSave,\n\tintegration,\n}) => {\n\tconst availableTriggers = integration.availableTriggers || [\n\t\t{ id: 'form_submitted', name: 'Form Submitted', description: 'Triggered each time a form is submitted.' }\n\t];\n\n\t// Auto-select first trigger and initialize state based on it\n\tconst firstTrigger = availableTriggers[0];\n\tconst [selectedTrigger, setSelectedTrigger] = useState(firstTrigger?.id || '');\n\tconst [eventName, setEventName] = useState(firstTrigger?.defaultEvent?.name || firstTrigger?.name || '');\n\t\n\t// Initialize key-value pairs from defaultEvent.mappings or use fallback\n\tconst getInitialKeyValuePairs = () => {\n\t\tif (firstTrigger?.defaultEvent?.mappings && typeof firstTrigger.defaultEvent.mappings === 'object') {\n\t\t\t// Convert mappings object to key-value pairs\n\t\t\tconst pairs = Object.entries(firstTrigger.defaultEvent.mappings).map(([key, value]) => ({\n\t\t\t\tkey,\n\t\t\t\tvalue: String(value)\n\t\t\t}));\n\t\t\t// Add empty row at the end\n\t\t\tpairs.push({ key: '', value: '' });\n\t\t\treturn pairs;\n\t\t}\n\t\t// Fallback to default pairs\n\t\treturn [\n\t\t\t{ key: 'user_name', value: '{user_name}' },\n\t\t\t{ key: 'user_id', value: '{user_id}' },\n\t\t\t{ key: '', value: '' }\n\t\t];\n\t};\n\n\tconst [keyValuePairs, setKeyValuePairs] = useState<KeyValuePair[]>(getInitialKeyValuePairs());\n\tconst [sendTest, setSendTest] = useState(false);\n\tconst [openDropdownIndex, setOpenDropdownIndex] = useState<{type: 'name' | 'value', index: number} | null>(null);\n\t\n\t// Refs for merge tag buttons\n\tconst nameButtonRef = useRef<HTMLButtonElement>(null);\n\tconst valueButtonRefs = useRef<Array<HTMLButtonElement | null>>([]);\n\n\t// Initialize refs array when keyValuePairs change\n\tuseEffect(() => {\n\t\tvalueButtonRefs.current = valueButtonRefs.current.slice(0, keyValuePairs.length);\n\t}, [keyValuePairs.length]);\n\n\tif (!isOpen) return null;\n\n\tconst handleTriggerChange = (triggerId: string) => {\n\t\tsetSelectedTrigger(triggerId);\n\t\tconst trigger = availableTriggers.find(t => t.id === triggerId);\n\t\tif (trigger) {\n\t\t\tsetEventName(trigger.defaultEvent?.name || trigger.name);\n\t\t\t\n\t\t\t// Update key-value pairs based on the selected trigger's defaultEvent.mappings\n\t\t\tif (trigger.defaultEvent?.mappings && typeof trigger.defaultEvent.mappings === 'object') {\n\t\t\t\tconst pairs = Object.entries(trigger.defaultEvent.mappings).map(([key, value]) => ({\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue: String(value)\n\t\t\t\t}));\n\t\t\t\tpairs.push({ key: '', value: '' });\n\t\t\t\tsetKeyValuePairs(pairs);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst updateKeyValuePair = (index: number, field: 'key' | 'value', value: string) => {\n\t\tconst newPairs = [...keyValuePairs];\n\t\tnewPairs[index][field] = value;\n\t\tsetKeyValuePairs(newPairs);\n\t};\n\n\tconst addKeyValuePair = () => {\n\t\tsetKeyValuePairs([...keyValuePairs, { key: '', value: '' }]);\n\t};\n\n\tconst removeKeyValuePair = (index: number) => {\n\t\tif (keyValuePairs.length > 1) {\n\t\t\tconst newPairs = keyValuePairs.filter((_, i) => i !== index);\n\t\t\tsetKeyValuePairs(newPairs);\n\t\t}\n\t};\n\n\tconst handleMergeTagSelect = (mergeTag: string) => {\n\t\tif (openDropdownIndex?.type === 'name') {\n\t\t\tsetEventName(prev => prev + mergeTag);\n\t\t} else if (openDropdownIndex?.type === 'value') {\n\t\t\tconst index = openDropdownIndex.index;\n\t\t\tupdateKeyValuePair(index, 'value', keyValuePairs[index].value + mergeTag);\n\t\t}\n\t\tsetOpenDropdownIndex(null);\n\t};\n\n\t// Get current trigger options for merge tag selector\n\tconst getCurrentTriggerOptions = () => {\n\t\tconst trigger = availableTriggers.find(t => t.id === selectedTrigger);\n\t\treturn trigger?.options || [];\n\t};\n\n\tconst handleSave = () => {\n\t\tconst data = {\n\t\t\ttrigger: selectedTrigger,\n\t\t\tname: eventName,\n\t\t\tmappings: keyValuePairs.filter(pair => pair.key && pair.value),\n\t\t\tsendTest\n\t\t};\n\t\tonSave(data);\n\t};\n\n\treturn (\n\t\t<div style={{\n\t\t\tposition: 'fixed',\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tbackgroundColor: 'rgba(0,0,0,0.7)',\n\t\t\tdisplay: 'flex',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center',\n\t\t\tzIndex: 1000\n\t\t}}>\n\t\t\t<div style={{\n\t\t\t\tbackgroundColor: 'white',\n\t\t\t\tborderRadius: '8px',\n\t\t\t\twidth: '500px',\n\t\t\t\tmaxHeight: '90vh',\n\t\t\t\toverflow: 'auto'\n\t\t\t}}>\n\t\t\t\t{/* Header */}\n\t\t\t\t<div style={{\n\t\t\t\t\tpadding: '20px 24px',\n\t\t\t\t\tborderBottom: '1px solid #ddd',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t}}>\n\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center' }}>\n\t\t\t\t\t\t<div style={{ \n\t\t\t\t\t\t\twidth: '32px', \n\t\t\t\t\t\t\theight: '32px',\n\t\t\t\t\t\t\tbackgroundColor: '#FF6900',\n\t\t\t\t\t\t\tborderRadius: '6px',\n\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\tmarginRight: '12px'\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<span \n\t\t\t\t\t\t\t\tclassName={`dashicons dashicons-${integration.slug === 'gravity-forms' ? 'feedback' : 'admin-plugins'}`} \n\t\t\t\t\t\t\t\tstyle={{ fontSize: '18px', color: 'white' }}\n\t\t\t\t\t\t\t></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2 style={{ margin: 0, fontSize: '18px' }}>Add Trigger</h2>\n\t\t\t\t\t\t\t<p style={{ margin: 0, color: '#646970', fontSize: '14px' }}>\n\t\t\t\t\t\t\t\tCreate a trigger for {integration.name}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button \n\t\t\t\t\t\tonClick={onClose}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackground: 'none',\n\t\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\tpadding: '4px'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"dashicons dashicons-no-alt\"></span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t{/* Content */}\n\t\t\t\t<div style={{ padding: '24px' }}>\n\t\t\t\t\t{/* Trigger Type */}\n\t\t\t\t\t<div style={{ marginBottom: '20px' }}>\n\t\t\t\t\t\t<label style={{ display: 'block', marginBottom: '8px', fontWeight: 'bold' }}>\n\t\t\t\t\t\t\tTrigger\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<select \n\t\t\t\t\t\t\tvalue={selectedTrigger}\n\t\t\t\t\t\t\tonChange={(e) => handleTriggerChange(e.target.value)}\n\t\t\t\t\t\t\tstyle={{ width: '100%', padding: '8px' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{availableTriggers.map(trigger => (\n\t\t\t\t\t\t\t\t<option key={trigger.id} value={trigger.id}>\n\t\t\t\t\t\t\t\t\t{trigger.name}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t{selectedTrigger && (\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\tbackgroundColor: '#e7f3ff',\n\t\t\t\t\t\t\t\tpadding: '12px',\n\t\t\t\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\t\t\t\tmarginTop: '8px',\n\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\talignItems: 'flex-start'\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<span \n\t\t\t\t\t\t\t\t\tclassName=\"dashicons dashicons-info\" \n\t\t\t\t\t\t\t\t\tstyle={{ color: '#0073aa', marginRight: '8px', marginTop: '2px' }}\n\t\t\t\t\t\t\t\t></span>\n\t\t\t\t\t\t\t\t<span style={{ fontSize: '14px' }}>\n\t\t\t\t\t\t\t\t\t{availableTriggers.find(t => t.id === selectedTrigger)?.description || 'No description available.'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Payload */}\n\t\t\t\t\t<div style={{ marginBottom: '20px' }}>\n\t\t\t\t\t\t<h3 style={{ margin: '0 0 8px 0', fontSize: '16px' }}>Payload</h3>\n\t\t\t\t\t\t<p style={{ color: '#646970', fontSize: '14px', marginBottom: '16px' }}>\n\t\t\t\t\t\t\tConfigure the data to send when this trigger fires.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t{/* Event Name */}\n\t\t\t\t\t\t<div style={{ marginBottom: '16px' }}>\n\t\t\t\t\t\t\t<label style={{ display: 'block', marginBottom: '4px', fontWeight: 'bold' }}>\n\t\t\t\t\t\t\t\tName:\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={eventName}\n\t\t\t\t\t\t\t\tonChange={(e) => setEventName(e.target.value)}\n\t\t\t\t\t\t\t\tplaceholder=\"Contact Form Submitted\"\n\t\t\t\t\t\t\t\tstyle={{ width: '100%', padding: '8px' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\tref={nameButtonRef}\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={() => setOpenDropdownIndex({ type: 'name', index: -1 })}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackground: 'none',\n\t\t\t\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\t\t\t\tcolor: '#646970',\n\t\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\t\tfontSize: '12px',\n\t\t\t\t\t\t\t\t\tpadding: '4px 0'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{'{...}'}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* Key-Value Pairs */}\n\t\t\t\t\t\t{keyValuePairs.map((pair, index) => (\n\t\t\t\t\t\t\t<div key={index} style={{ \n\t\t\t\t\t\t\t\tdisplay: 'flex', \n\t\t\t\t\t\t\t\tgap: '8px', \n\t\t\t\t\t\t\t\tmarginBottom: '8px',\n\t\t\t\t\t\t\t\talignItems: 'center'\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<div style={{ flex: 1 }}>\n\t\t\t\t\t\t\t\t\t<label style={{ display: 'block', fontSize: '12px', marginBottom: '2px' }}>\n\t\t\t\t\t\t\t\t\t\tKey:\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={pair.key}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => updateKeyValuePair(index, 'key', e.target.value)}\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%', padding: '6px' }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div style={{ flex: 1 }}>\n\t\t\t\t\t\t\t\t\t<label style={{ display: 'block', fontSize: '12px', marginBottom: '2px' }}>\n\t\t\t\t\t\t\t\t\t\tValue:\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={pair.value}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => updateKeyValuePair(index, 'value', e.target.value)}\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%', padding: '6px' }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div style={{ display: 'flex', gap: '4px', alignItems: 'flex-end', paddingBottom: '2px' }}>\n\t\t\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={addKeyValuePair}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tbackground: 'none',\n\t\t\t\t\t\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\t\t\t\t\t\tcolor: '#646970',\n\t\t\t\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\t\t\t\tpadding: '4px'\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span className=\"dashicons dashicons-plus-alt\"></span>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t{keyValuePairs.length > 1 && (\n\t\t\t\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => removeKeyValuePair(index)}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: 'none',\n\t\t\t\t\t\t\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#646970',\n\t\t\t\t\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: '4px'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"dashicons dashicons-minus\"></span>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\t\tref={(el) => {\n\t\t\t\t\t\t\t\t\t\tif (valueButtonRefs.current) {\n\t\t\t\t\t\t\t\t\t\t\tvalueButtonRefs.current[index] = el;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tonClick={() => setOpenDropdownIndex({ type: 'value', index })}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tbackground: 'none',\n\t\t\t\t\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\t\t\t\t\tcolor: '#646970',\n\t\t\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\t\t\tfontSize: '12px',\n\t\t\t\t\t\t\t\t\t\talignSelf: 'flex-end',\n\t\t\t\t\t\t\t\t\t\tpaddingBottom: '6px'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{'{...}'}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Send Test */}\n\t\t\t\t\t<div style={{ marginBottom: '20px' }}>\n\t\t\t\t\t\t<label style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tchecked={sendTest}\n\t\t\t\t\t\t\t\tonChange={(e) => setSendTest(e.target.checked)}\n\t\t\t\t\t\t\t\tstyle={{ marginRight: '8px' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"dashicons dashicons-admin-tools\" style={{ marginRight: '6px' }}></span>\n\t\t\t\t\t\t\tSend Test\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{/* Merge Tag Selector */}\n\t\t\t\t{openDropdownIndex && (\n\t\t\t\t\t<MergeTagSelector\n\t\t\t\t\t\toptions={getCurrentTriggerOptions()}\n\t\t\t\t\t\tonSelect={handleMergeTagSelect}\n\t\t\t\t\t\tisOpen={true}\n\t\t\t\t\t\tonClose={() => setOpenDropdownIndex(null)}\n\t\t\t\t\t\tbuttonRef={\n\t\t\t\t\t\t\topenDropdownIndex.type === 'name' \n\t\t\t\t\t\t\t\t? nameButtonRef \n\t\t\t\t\t\t\t\t: { current: valueButtonRefs.current[openDropdownIndex.index] }\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\n\t\t\t\t{/* Footer */}\n\t\t\t\t<div style={{\n\t\t\t\t\tpadding: '16px 24px',\n\t\t\t\t\tborderTop: '1px solid #ddd',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tjustifyContent: 'flex-end',\n\t\t\t\t\tgap: '10px'\n\t\t\t\t}}>\n\t\t\t\t\t<button \n\t\t\t\t\t\tonClick={onClose}\n\t\t\t\t\t\tclassName=\"button button-secondary\"\n\t\t\t\t\t>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>\n\t\t\t\t\t<button \n\t\t\t\t\t\tonClick={handleSave}\n\t\t\t\t\t\tclassName=\"button button-primary\"\n\t\t\t\t\t\tdisabled={!selectedTrigger}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd Trigger\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};","/**\n * EchoDash Main App Component\n * \n * Simple React app for EchoDash settings matching mockups\n */\n\nimport React, { useState } from 'react';\nimport { IntegrationList } from './components/IntegrationList';\nimport { IntegrationDetail } from './components/IntegrationDetail';\nimport { TriggerModal } from './components/TriggerModal';\n\n// Get global data from PHP\ndeclare global {\n\tinterface Window {\n\t\tecdReactData: {\n\t\t\tsettings: {\n\t\t\t\tendpoint?: string;\n\t\t\t\tisConnected?: boolean;\n\t\t\t};\n\t\t\tintegrations: Array<{\n\t\t\t\tslug: string;\n\t\t\t\tname: string;\n\t\t\t\ticon: string;\n\t\t\t\ttriggerCount: number;\n\t\t\t\tenabled: boolean;\n\t\t\t\tdescription?: string;\n\t\t\t\tavailableTriggers?: Array<{\n\t\t\t\t\tid: string;\n\t\t\t\t\tname: string;\n\t\t\t\t\tdescription?: string;\n\t\t\t\t\tdefaultEvent?: any;\n\t\t\t\t}>;\n\t\t\t}>;\n\t\t\ttriggers: Record<string, any[]>;\n\t\t\tnonce: string;\n\t\t\tapiUrl: string;\n\t\t\ti18n: Record<string, string>;\n\t\t};\n\t}\n}\n\nexport const App: React.FC = () => {\n\tconst [currentView, setCurrentView] = useState<'list' | 'detail'>('list');\n\tconst [selectedIntegration, setSelectedIntegration] = useState<string | null>(null);\n\tconst [showTriggerModal, setShowTriggerModal] = useState(false);\n\tconst [triggers, setTriggers] = useState<Record<string, any[]>>(window.ecdReactData?.triggers || {});\n\tconst [integrations, setIntegrations] = useState(window.ecdReactData?.integrations || []);\n\n\tconst data = window.ecdReactData || {\n\t\tsettings: {},\n\t\tintegrations: [],\n\t\ttriggers: {},\n\t\tnonce: '',\n\t\tapiUrl: '',\n\t\ti18n: {}\n\t};\n\n\tconst handleIntegrationClick = (slug: string) => {\n\t\tsetSelectedIntegration(slug);\n\t\tsetCurrentView('detail');\n\t};\n\n\tconst handleBackToList = () => {\n\t\tsetCurrentView('list');\n\t\tsetSelectedIntegration(null);\n\t};\n\n\tconst handleAddTrigger = () => {\n\t\tsetShowTriggerModal(true);\n\t};\n\n\tconst handleSaveTrigger = async (triggerData: any) => {\n\t\tconsole.log('Saving trigger:', triggerData);\n\t\t\n\t\ttry {\n\t\t\tconst response = await fetch(`${data.apiUrl}integrations/${selectedIntegration}/triggers`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'X-WP-Nonce': data.nonce,\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\ttrigger: triggerData.trigger,\n\t\t\t\t\tname: triggerData.name,\n\t\t\t\t\tmappings: triggerData.mappings,\n\t\t\t\t\tsend_test: triggerData.sendTest\n\t\t\t\t}),\n\t\t\t});\n\n\t\t\tif (response.ok) {\n\t\t\t\tconst result = await response.json();\n\t\t\t\tconsole.log('Trigger saved successfully:', result);\n\t\t\t\t\n\t\t\t\t// Update local state with new trigger\n\t\t\t\tif (selectedIntegration) {\n\t\t\t\t\tconst integrationTriggers = triggers[selectedIntegration] || [];\n\t\t\t\t\tintegrationTriggers.push({\n\t\t\t\t\t\tid: result.id || Date.now().toString(),\n\t\t\t\t\t\tname: triggerData.name,\n\t\t\t\t\t\ttrigger: triggerData.trigger,\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t});\n\t\t\t\t\tsetTriggers({\n\t\t\t\t\t\t...triggers,\n\t\t\t\t\t\t[selectedIntegration]: integrationTriggers\n\t\t\t\t\t});\n\n\t\t\t\t\t// Update integration trigger count\n\t\t\t\t\tsetIntegrations(prev => prev.map(integration => {\n\t\t\t\t\t\tif (integration.slug === selectedIntegration) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...integration,\n\t\t\t\t\t\t\t\ttriggerCount: integration.triggerCount + 1,\n\t\t\t\t\t\t\t\tenabled: true\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn integration;\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tsetShowTriggerModal(false);\n\t\t\t} else {\n\t\t\t\tconst errorData = await response.json();\n\t\t\t\tconsole.error('Failed to save trigger:', errorData);\n\t\t\t\talert('Failed to save trigger. Please try again.');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Error saving trigger:', error);\n\t\t\talert('Error saving trigger. Please check your connection and try again.');\n\t\t}\n\t};\n\n\tconst selectedIntegrationData = integrations.find(i => i.slug === selectedIntegration);\n\n\treturn (\n\t\t<div className=\"wrap\">\n\t\t\t{currentView === 'list' ? (\n\t\t\t\t<IntegrationList\n\t\t\t\t\tintegrations={integrations}\n\t\t\t\t\tsettings={data.settings}\n\t\t\t\t\tonIntegrationClick={handleIntegrationClick}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\tselectedIntegrationData && (\n\t\t\t\t\t<IntegrationDetail\n\t\t\t\t\t\tintegration={selectedIntegrationData}\n\t\t\t\t\t\ttriggers={triggers[selectedIntegration!] || []}\n\t\t\t\t\t\tonBack={handleBackToList}\n\t\t\t\t\t\tonAddTrigger={handleAddTrigger}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t)}\n\n\t\t\t{showTriggerModal && selectedIntegrationData && (\n\t\t\t\t<TriggerModal\n\t\t\t\t\tisOpen={showTriggerModal}\n\t\t\t\t\tonClose={() => setShowTriggerModal(false)}\n\t\t\t\t\tonSave={handleSaveTrigger}\n\t\t\t\t\tintegration={selectedIntegrationData}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};","/**\n * EchoDash React Admin Interface Entry Point\n * \n * This file initializes the React application within the WordPress admin context.\n */\n\nimport { createRoot } from 'react-dom/client';\nimport { App } from './App';\n\n// Import our styles (WordPress styles are loaded separately via PHP)\nimport './styles/main.css';\n\n// Initialize the React app\nfunction initializeEchoDashApp() {\n\ttry {\n\t\tconst container = document.getElementById('echodash-react-app');\n\t\t\n\t\tif (container) {\n\t\t\tconst root = createRoot(container);\n\t\t\troot.render(<App />);\n\t\t\t\n\t\t\t// Mark the container as loaded\n\t\t\tcontainer.classList.add('loaded');\n\t\t\t\n\t\t\t// Remove the loading spinner\n\t\t\tconst loading = document.getElementById('echodash-loading');\n\t\t\tif (loading) {\n\t\t\t\tloading.style.display = 'none';\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.error('EchoDash: Container #echodash-react-app not found');\n\t\t}\n\t} catch (error) {\n\t\tconsole.error('EchoDash: Error during initialization:', error);\n\t}\n}\n\n// Try to initialize immediately, or wait for DOM ready\nif (document.readyState === 'loading') {\n\tdocument.addEventListener('DOMContentLoaded', initializeEchoDashApp);\n} else {\n\tinitializeEchoDashApp();\n}"],"names":["m","exports","createRoot","hydrateRoot","module","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","IntegrationList","integrations","settings","onIntegrationClick","createElement","Fragment","style","display","alignItems","marginBottom","className","fontSize","marginRight","margin","href","target","rel","marginLeft","backgroundColor","border","borderRadius","padding","gap","flex","marginTop","color","htmlFor","type","id","placeholder","value","endpoint","width","height","justifyContent","position","cursor","flexDirection","map","integration","key","slug","icon","fontWeight","name","triggerCount","onClick","IntegrationDetail","triggers","onBack","onAddTrigger","description","length","textAlign","trigger","index","MergeTagSelector","options","onSelect","isOpen","onClose","buttonRef","dropdownRef","useRef","setPosition","useState","top","left","useEffect","current","buttonRect","getBoundingClientRect","dropdownRect","bottom","scrollY","scrollX","innerWidth","right","innerHeight","handleClickOutside","event","contains","document","addEventListener","removeEventListener","ref","boxShadow","zIndex","minWidth","maxHeight","overflowY","group","groupIndex","borderBottom","option","optionIndex","handleSelect","groupType","meta","transition","onMouseEnter","e","currentTarget","onMouseLeave","String","preview","TriggerModal","onSave","availableTriggers","firstTrigger","selectedTrigger","setSelectedTrigger","eventName","setEventName","defaultEvent","keyValuePairs","setKeyValuePairs","getInitialKeyValuePairs","mappings","pairs","Object","entries","push","sendTest","setSendTest","openDropdownIndex","setOpenDropdownIndex","nameButtonRef","valueButtonRefs","slice","updateKeyValuePair","field","newPairs","addKeyValuePair","overflow","background","onChange","triggerId","find","t","handleTriggerChange","pair","paddingBottom","filter","_","i","removeKeyValuePair","el","alignSelf","checked","getCurrentTriggerOptions","mergeTag","prev","borderTop","handleSave","data","disabled","App","currentView","setCurrentView","selectedIntegration","setSelectedIntegration","showTriggerModal","setShowTriggerModal","setTriggers","ecdReactData","setIntegrations","nonce","apiUrl","i18n","selectedIntegrationData","handleBackToList","handleAddTrigger","async","console","log","triggerData","response","fetch","method","headers","body","JSON","stringify","send_test","ok","result","json","integrationTriggers","Date","now","toString","enabled","errorData","error","alert","initializeEchoDashApp","container","getElementById","render","classList","add","loading","readyState"],"sourceRoot":""}