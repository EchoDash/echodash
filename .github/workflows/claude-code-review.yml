
name: Claude Code Review - EchoDash Plugin

on:
  pull_request:
    types: [opened, synchronize]
    branches: [master, main]
    # Run on plugin-specific file changes
    paths:
      - "assets/src/**/*.ts"
      - "assets/src/**/*.tsx" 
      - "assets/src/**/*.js"
      - "assets/src/**/*.jsx"
      - "includes/**/*.php"
      - "*.php"
      - "assets/tests/**/*"
      - "composer.json"
      - "package.json"

jobs:
  claude-review:
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # EchoDash-specific review prompt
          direct_prompt: |
            Please review this EchoDash WordPress plugin pull request focusing on:
            
            **WordPress Plugin Standards:**
            - WordPress coding standards (PHPCS/WPCS compliance)
            - Proper use of WordPress APIs and hooks
            - Security: Input sanitization, nonce verification, capability checks
            - Plugin architecture and WordPress best practices
            
            **React/TypeScript Frontend:**
            - TypeScript type safety and proper interface usage
            - React component performance and best practices
            - WordPress component library integration (@wordpress/components)
            - Accessibility (WCAG 2.1 AA compliance)
            - Bundle size impact and optimization
            
            **API Integration:**
            - REST API endpoint security and validation
            - Error handling and user feedback
            - WordPress nonce implementation
            - Data sanitization with `echodash_clean()` function
            
            **Testing:**
            - Jest unit test coverage (80% branch coverage requirement)
            - Playwright E2E test scenarios
            - Test quality and edge case coverage
            - PHPUnit test coverage for PHP components
            
            **Performance & Architecture:**
            - Database query optimization
            - Transient caching implementation
            - Event tracking efficiency
            - Integration with 20+ WordPress plugins
            
            Be constructive and provide specific WordPress/plugin development guidance.

          # Use sticky comments for consistent feedback on PR updates
          use_sticky_comment: true
          
          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality
          
          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' && 
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}
          
          # EchoDash-specific tools for code analysis
          allowed_tools: "Bash(npm run test:unit),Bash(npm run lint),Bash(composer phpcs),Bash(composer phpstan),Bash(npm run build),Read,Grep"
          
          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

